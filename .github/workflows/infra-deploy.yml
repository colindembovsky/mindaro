name: Infra deploy

on:
  workflow_dispatch:
  pull_request:
    paths:
    - samples/BikeSharingApp/Infrastructure/**

env:
  tf_actions_working_dir: samples/BikeSharingApp/Infrastructure


permissions:
  id-token: write
  contents: read

jobs:
  plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    environment: demo
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    
    steps:
    - uses: actions/checkout@v2

    - name: Log in to Azure using OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: |
        set
        terraform init
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color --out=out.tfplan
      continue-on-error: true
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true

    - name: Create the plan summary
      uses: actions/github-script@v6
      id: summary
      env:
        PLAN: '${{ steps.plan.outputs.stdout }}'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          // 1. Prep the output
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>

          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`

          </details>

          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          
          <details><summary>Show Plan</summary>
          
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
          
          // 2. Set the output variable
          core.setOutput('summary', output);
      
    - name: Write a step summary
      run: echo "${{ steps.summary.outputs.summary }}" >> $GITHUB_STEP_SUMMARY

    - name: Upload the plan
      uses: actions/upload-artifact@v3
      with:
        name: tf-plan
        path: ${{ env.tf_actions_working_dir }}/out.tfplan

    - name: Publish Coverage as a Status
      if: github.event_name == 'pull_request'
      uses: Sibz/github-status-action@v1.1.6
      with:
        authToken: ${{ secrets.GITHUB_TOKEN }}
        state: ${{ steps.summary.outputs.summary }}
        context: Terraform Plan
        description: Terraform Plan Summary
        sha: ${{ github.event.pull_request.head.sha }}

  apply:
    name: Terraform plan
    needs: [ plan ]
    runs-on: ubuntu-latest
    environment: demo
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    
    steps:
    - uses: actions/checkout@v2

    - name: Log in to Azure using OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    
    - name: Terraform Init
      id: init
      run: |
        set
        terraform init
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_USE_OIDC: true

    - name: Download the plan
      uses: actions/download-artifact@v3
      with:
        name: tf-plan
        path: ${{ env.tf_actions_working_dir }}/plan

    # - name: Apply the plan
    #   id: apply
    #   run: terraform apply
    
