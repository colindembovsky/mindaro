name: Bikes - Test & Scan

on:
  pull_request:
    paths:
      - samples/BikeSharingApp/Bikes/**
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04

    defaults:
      run:
        working-directory: samples/BikeSharingApp/Bikes/

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'
        cache-dependency-path: samples/BikeSharingApp/Bikes/package-lock.json
    
    - name: Install packages
      run: npm ci
    
    - name: Build
      run: npm run build --if-present

    - name: Run tests with coverage
      uses: ArtiomTr/jest-coverage-report-action@v2
      id: coverage
      with:
          output: report-markdown
          annotations: none
          working-directory: samples/BikeSharingApp/Bikes
    
    - uses: marocchino/sticky-pull-request-comment@v2
      with:
          message: ${{ steps.coverage.outputs.report }}
    
    - name: Add step summary
      run: echo '${{ steps.coverage.outputs.report }}' >> $GITHUB_STEP_SUMMARY

  scan:
    name: Scan code
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
        config-file: .github/codeql/bikes-scan.yml
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  container_scan:
    name: Scan container Image
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker Image
      uses: docker/build-push-action@v2
      with:
        push: false
        load: true
        context: "{{defaultContext}}:/samples/BikeSharingApp/Bikes"
        tags: localbuild/bikes:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Scan image
      uses: anchore/scan-action@v3
      id: scan
      with:
        image: localbuild/bikes:latest
        fail-build: false
        #severity-cutoff: critical
    
    - name: upload Anchore scan SARIF report
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}
