name: Bikes - Build-Deploy-All

on:
  workflow_dispatch:

permissions:
  packages: write
  id-token: write

env:
  aks_resource_group: cd-mindaro
  aks_cluster: cdmindaro
  app_url: http://cdmindaro.southcentralus.cloudapp.azure.com
  namespace: bikeapp
  chart_root: ./samples/BikeSharingApp/charts

jobs:
  build:
    name: Build images
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # - name: Login to GitHub Container Registry
    #   uses: docker/login-action@v2
    #   with:
    #     registry: ghcr.io
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.GITHUB_TOKEN }}

    # - name: Build and push the images
    #   run: |
    #     docker-compose -f docker-compose.yml -f docker-compose.prod.yml build
    #     docker-compose push
    #   env:
    #     IMAGE_TAG: ${{ github.sha }}
    #     IMAGE_REPO: ghcr.io/${{ github.repository }}
  
  deploy:
    name: Helm deploy
    needs: [ build ]
    environment:
      name: demo
      url: ${{ env.app_url }}

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Log in to Azure using OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Set the AKS kubectl context
      uses: azure/aks-set-context@v2
      with:
        resource-group: ${{ env.aks_resource_group }}
        cluster-name: ${{ env.aks_cluster }}
    
    - name: Replace tokens in values template
      uses: cschleiden/replace-tokens@v1
      with:
        tokenPrefix: '__'
        tokenSuffix: '__'
        files: '["${{ env.chart_root }}/values.template.yaml"]'
      env:
        IMAGE_TAG: ${{ github.sha }}
        IMAGE_REPO: ghcr.io/${{ github.repository }}

    - name: Update helm dependencies
      run: helm dependency build ${{ env.chart_root }}

    # - name: Deploy chart
    #   run: |
    #     helm upgrade bikesharingapp \
    #       --install ${{ env.chart_root }} \
    #       --values ${{ env.chart_root }}/values.template.yaml \
    #       --dependency-update \
    #       --namespace ${{ env.namespace }} \
    #       --timeout 10m \
    #       --atomic
    
    - name: Create release-name
      id: generate-release-name
      run: |
          release=bikesharing-$GITHUB_HEAD_REF
          release=${release::53}
          release=$(echo ${release//[!0-9a-zA-Z]/-} | tr '[:upper:]' '[:lower:]' | sed -e 's/^-/z/' -e 's/-$/z/')
          echo ::set-output name=result::$release

    - name: Bake the manifest
      id: bake
      uses: azure/k8s-bake@v1
      with:
          renderEngine: helm
          helm-version: latest
          helmChart: ${{ env.chart_root }}
          releaseName: ${{steps.generate-release-name.outputs.result}}
          overrideFiles: ${{ env.chart_root }}/values.template.yaml
          overrides: |
            fullnameOverride: ${{steps.generate-release-name.outputs.result}}
    
    - name: Output manifest to summary
      if: always()
      id: summary
      run: |
        echo "### Helm Manifest ðŸ–Œ" >> $GITHUB_STEP_SUMMARY
        echo "<details>" >> $GITHUB_STEP_SUMMARY
        echo "<summary>Show Manifest</summary>" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`yaml" >> $GITHUB_STEP_SUMMARY
        cat ${{ steps.bake.outputs.manifestsBundle }} >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "</details>" >> $GITHUB_STEP_SUMMARY

    # - name: Deploy baked chart
    #   uses: azure/k8s-deploy@v1
    #   with:
    #     manifests: ${{ steps.bake.outputs.manifestsBundle }}
    #     namespace: ${{ env.namespace }}
    #     force: "true"