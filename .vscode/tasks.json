{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "k8s: set ns to bikeapp",
			"type": "shell",
			"command": "kubectl config set-context --current --namespace bikeapp",
			"problemMatcher": [],
			"group": "none"
		},
		{
			"label": "start minikube",
			"type": "shell",
			"command": "minikube start && kubectl config set-context --current --namespace bikeapp",
			"problemMatcher": [],
			"group": "none"
		},
		{
			"label": "minikube docker env",
			"type": "shell",
			"command": "eval $(minikube docker-env)",
			"problemMatcher": [],
			"group": "none"
		},
		{
			"label": "build",
			"type": "shell",
			"command": "eval $(minikube docker-env) && docker-compose build",
			"group": "build"
		},
		{
			"label": "refresh helm",
			"type": "shell",
			"command": "helm dependency build ./samples/BikeSharingApp/charts/",
			"group": "build"
		},
		{
			"label": "deploy helm",
			"type": "shell",
			"command": "helm upgrade bikesharingapp --install ./samples/BikeSharingApp/charts/ --values ./samples/BikeSharingApp/charts/dev-values.yaml --dependency-update --namespace bikeapp --timeout 2m --atomic",
			"group": "build",
			"dependsOn": [
				"minikube start",
				"refresh helm"
			]
		},
		{
			"label": "k8s: fwd dash",
			"type": "shell",
			"command": "kubectl port-forward -nbikeapp $(kubectl get pods -nbikeapp --selector \"app.kubernetes.io/name=traefik\" --output=name) 9000:9000",
			"isBackground": true,
			"presentation": {
				"reveal": "silent",
				"panel": "dedicated"
			},
			"problemMatcher": [],
			"group": "none"
		},
		{
			"label": "k8s: fwd ingress",
			"type": "shell",
			"command": "kubectl",
			"args": [
				"port-forward",
				"svc/traefik",
				"8080:80",
				"-nbikeapp"
			],
			"isBackground": true,
			"presentation": {
				"reveal": "silent",
				"panel": "dedicated"
			},
			"problemMatcher": [],
			"group": "none"
		},
		{
			"label": "k8s: fwd mongo",
			"type": "shell",
			"command": "kubectl",
			"args": [
				"port-forward",
				"svc/databases-mongo",
				"27017:27017",
				"-nbikeapp"
			],
			"isBackground": true,
			"presentation": {
				"reveal": "silent",
				"panel": "dedicated"
			},
			"problemMatcher": [],
			"group": "none"
		},
		{
			"type": "npm",
			"script": "install",
			"path": "samples/BikeSharingApp/Bikes",
			"problemMatcher": [],
			"label": "npm: install - samples/BikeSharingApp/Bikes",
			"detail": "npm install"
		},
		{
			"label": "bridge-to-kubernetes.resource",
			"type": "bridge-to-kubernetes.resource",
			"resource": "bikes",
			"resourceType": "service",
			"ports": [
				8099
			],
			"targetCluster": "minikube",
			"targetNamespace": "bikeapp",
			"useKubernetesServiceEnvironmentVariables": true
		},
		{
			"label": "bridge-to-kubernetes.compound",
			"dependsOn": [
				"npm: install - samples/BikeSharingApp/Bikes",
				"bridge-to-kubernetes.resource"
			],
			"dependsOrder": "sequence"
		},
		{
			"label": "demo: code feature",
			"type": "shell",
			"command": "patches/apply-patch.sh",
			"args": [
			  "${input:CODE_FEATURE}",
			  "${input:BRANCH_NAME}",
			],
			"group": "none",
			"isBackground": true,
			"problemMatcher": [],
			"promptOnClose": false,
			"presentation": {
			  "echo": true,
			  "reveal": "always",
			  "focus": false,
			  "panel": "shared",
			  "showReuseMessage": false,
			  "clear": false
			}
		},
	],
	"inputs": [
		{
			"id": "BRANCH_NAME",
			"type": "promptString",
			"default": "feature-get-by-type",
			"description": "Provide a feature branch name"
		},
		{
			"id": "CODE_FEATURE",
			"type": "pickString",
			"description": "Select the code feature",
			"default": "get-by-type",
			"options": [
			  "get-by-type"
			]
		}
	]
}